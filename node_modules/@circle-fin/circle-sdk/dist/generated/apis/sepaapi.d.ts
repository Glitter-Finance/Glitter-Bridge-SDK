/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from "axios";
import { Configuration } from "../configuration";
import { RequestArgs, BaseAPI } from "../base";
import { CreateSepaAccountResponse } from "../models";
import { GetSepaAccountInstructionsResponse } from "../models";
import { GetSepaAccountResponse } from "../models";
import { SepaCreationRequest } from "../models";
/**
 * SEPAApi - axios parameter creator
 * @export
 */
export declare const SEPAApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a SEPA bank account (BETA)
     * @param {SepaCreationRequest} [sepaCreationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSepaAccount: (sepaCreationRequest?: SepaCreationRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get a SEPA bank account (BETA)
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSepaAccount: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get the SEPA transfer instructions into the Circle bank account given your bank account id (BETA).
     * @summary Get SEPA instructions (BETA)
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSepaAccountInstructions: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SEPAApi - functional programming interface
 * @export
 */
export declare const SEPAApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a SEPA bank account (BETA)
     * @param {SepaCreationRequest} [sepaCreationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSepaAccount(sepaCreationRequest?: SepaCreationRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateSepaAccountResponse>>;
    /**
     *
     * @summary Get a SEPA bank account (BETA)
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSepaAccount(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSepaAccountResponse>>;
    /**
     * Get the SEPA transfer instructions into the Circle bank account given your bank account id (BETA).
     * @summary Get SEPA instructions (BETA)
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSepaAccountInstructions(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSepaAccountInstructionsResponse>>;
};
/**
 * SEPAApi - factory interface
 * @export
 */
export declare const SEPAApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Create a SEPA bank account (BETA)
     * @param {SepaCreationRequest} [sepaCreationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSepaAccount(sepaCreationRequest?: SepaCreationRequest, options?: any): AxiosPromise<CreateSepaAccountResponse>;
    /**
     *
     * @summary Get a SEPA bank account (BETA)
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSepaAccount(id: string, options?: any): AxiosPromise<GetSepaAccountResponse>;
    /**
     * Get the SEPA transfer instructions into the Circle bank account given your bank account id (BETA).
     * @summary Get SEPA instructions (BETA)
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSepaAccountInstructions(id: string, options?: any): AxiosPromise<GetSepaAccountInstructionsResponse>;
};
/**
 * SEPAApi - object-oriented interface
 * @export
 * @class SEPAApi
 * @extends {BaseAPI}
 */
export declare class SEPAApi extends BaseAPI {
    /**
     *
     * @summary Create a SEPA bank account (BETA)
     * @param {SepaCreationRequest} [sepaCreationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SEPAApi
     */
    createSepaAccount(sepaCreationRequest?: SepaCreationRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateSepaAccountResponse>>;
    /**
     *
     * @summary Get a SEPA bank account (BETA)
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SEPAApi
     */
    getSepaAccount(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetSepaAccountResponse>>;
    /**
     * Get the SEPA transfer instructions into the Circle bank account given your bank account id (BETA).
     * @summary Get SEPA instructions (BETA)
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SEPAApi
     */
    getSepaAccountInstructions(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetSepaAccountInstructionsResponse>>;
}
