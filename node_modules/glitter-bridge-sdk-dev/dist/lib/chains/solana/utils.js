"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolanaUtils = void 0;
const bip39 = __importStar(require("bip39"));
const nacl = __importStar(require("tweetnacl"));
const ed25519_hd_key_1 = require("ed25519-hd-key");
class SolanaUtils {
    static mnemonicToSecretKey(mnemonic) {
        return __awaiter(this, void 0, void 0, function* () {
            // eslint-disable-next-line no-async-promise-executor
            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
                try {
                    //Fail Safe
                    if (!mnemonic) {
                        throw new Error('DEV_SOLANA_ACCOUNT_TEST not set');
                    }
                    //Convert seed to Uint8Array
                    const seed = yield bip39.mnemonicToSeed(mnemonic);
                    const seedBuffer = Buffer.from(seed).toString('hex');
                    const path44Change = `m/44'/501'/0'/0'`;
                    const derivedSeed = (0, ed25519_hd_key_1.derivePath)(path44Change, seedBuffer).key;
                    const sk = nacl.sign.keyPair.fromSeed(derivedSeed).secretKey;
                    if (!sk) {
                        throw new Error('Solana Wallet not found');
                    }
                    resolve(sk);
                }
                catch (error) {
                    reject(error);
                }
            }));
        });
    }
    static generateMnemonic() {
        const mnemonic = bip39.generateMnemonic();
        return mnemonic;
    }
}
exports.SolanaUtils = SolanaUtils;
