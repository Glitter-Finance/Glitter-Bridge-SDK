import * as algosdk from 'algosdk';
import { Transaction } from "algosdk";
import { BridgeToken, Routing } from '../../../common';
import { AlgorandAccountsConfig } from '../config';
export declare class AlgorandTxns {
    private _client;
    private _algoToken;
    private _accounts;
    constructor(algoClient: any, accounts: AlgorandAccountsConfig);
    get AlgoToken(): BridgeToken | undefined;
    sendAlgoTransaction(routing: Routing): Promise<Transaction>;
    initAlgorandUSDCTokenBridge(routing: Routing, token: BridgeToken | undefined): Promise<algosdk.Transaction[]>;
    sendTokensTransaction(routing: Routing, token: BridgeToken): Promise<Transaction>;
    optinTransaction(address: string, token_asset_id: number): Promise<Transaction>;
    closeOutAccountTransaction(address_closing: string, address_receiving: string): Promise<Transaction>;
    closeOutTokenTransaction(address_closing: string, address_receiving: string, token_asset_id: number): Promise<Transaction>;
}
