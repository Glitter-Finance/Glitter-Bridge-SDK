"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValueUnits = void 0;
const utils_1 = require("./utils");
class ValueUnits {
    constructor() {
        this.value = 0;
        this.units = BigInt(0);
    }
    static fromValue(value, decimals) {
        {
            let returnValue = new ValueUnits();
            returnValue.value = value;
            //Note precise is used to avoid floating point errors
            returnValue.units = BigInt((0, utils_1.Precise)(value * Math.pow(10, decimals)));
            return returnValue;
        }
    }
    static fromUnits(units, decimals) {
        {
            let returnValue = new ValueUnits();
            returnValue.units = units;
            let x = units.toString().padStart(decimals, "0");
            var position = x.length - decimals;
            var output = [x.slice(0, position), ".", x.slice(position)].join("");
            returnValue.value = Number(output);
            return returnValue;
        }
    }
}
exports.ValueUnits = ValueUnits;
// using BigNumber.js
// e.g 1 => 1000000 USDC
// export function toTokenUnits(
//   amount: string | number | BigNumber,
//   decimals: number
// ): BigNumber {
//   const decimals = new BigNumber(10).pow(decimals);
//   return new BigNumber(amount).times(decimals);
// }
// e.g 1000000 => 1 USDC
// export function fromTokenUnits(
//   amount: string | number | BigNumber,
//   decimals: number
// ): BigNumber {
//   const decimals = new BigNumber(10).pow(decimals);
//   return new BigNumber(amount).div(decimals);
// }
