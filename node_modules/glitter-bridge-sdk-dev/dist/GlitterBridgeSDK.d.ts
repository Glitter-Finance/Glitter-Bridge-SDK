import { AlgorandConnect } from "./lib/chains/algorand";
import { EvmConnect } from "./lib/chains/evm";
import { SolanaConnect } from "./lib/chains/solana";
import { BridgeEvmNetworks, BridgeNetworks } from "./lib/common/networks/networks";
import { GlitterEnvironment } from "./lib/configs/config";
export declare class GlitterBridgeSDK {
    private _bridgeConfig;
    private _rpcOverrides;
    private _algorand;
    private _solana;
    private _evm;
    setEnvironment(environment: GlitterEnvironment): GlitterBridgeSDK;
    setRPC(network: BridgeNetworks, rpc: string): GlitterBridgeSDK;
    connect(networks: BridgeNetworks[]): GlitterBridgeSDK;
    private connectToAlgorand;
    private connectToSolana;
    private connectToEvmNetwork;
    /**
     * Returns EVMConnect for
     * a specific evm network
     * @param {BridgeEvmNetworks} network
     * @returns {EvmConnect | undefined}
     */
    getEvmNetwork(network: BridgeEvmNetworks): EvmConnect | undefined;
    get algorand(): AlgorandConnect | undefined;
    get solana(): SolanaConnect | undefined;
}
